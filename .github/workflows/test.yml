name: test workflow

on:
  push:
    branches: 
      - main
      - '*'
  pull_request:
    branches: [main]
  release:
    types:
      - published

jobs:
  tests:
    name: "py${{ matrix.python-version }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Install dependencies
        shell: bash {0}
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
            export PATH="/c/Users/runneradmin/.local/bin:$PATH"
          else
            curl -LsSf https://astral.sh/uv/install.sh | sh
          fi
          uv python install ${{ matrix.python-version }}
          uv venv --python ${{ matrix.python-version }}
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            .venv\\Scripts\\activate
          else
            source .venv/bin/activate
          fi
          uv pip install -e .[tests]
      - name: Test with pytest
        shell: bash {0}
        run: |
          uv run pytest --cov=trendfollower --cov-branch --cov-report=term-missing --cov-report=xml:coverage.xml -vv tests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: .
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true
